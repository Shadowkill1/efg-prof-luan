import datetime

class Pessoa:
    def __init__(self, nome, nascimento, cpf, rg, endereco, estado_civil):
        self._nome = nome
        self._nascimento = nascimento
        self._cpf = cpf
        self._rg = rg
        self._endereco = endereco
        self._estado_civil = estado_civil

    def get_nome(self):
        return self._nome

    def set_nome(self, nome):
        self._nome = nome

    def get_nascimento(self):
        return self._nascimento

    def set_nascimento(self, nascimento):
        self._nascimento = nascimento

    def get_cpf(self):
        return "********" + self._cpf[-3:]

    def set_cpf(self, cpf):
        self._cpf = cpf

    def get_rg(self):
        return "********" + self._rg[-3:]

    def set_rg(self, rg):
        self._rg = rg

    def get_endereco(self):
        return self._endereco

    def set_endereco(self, endereco):
        self._endereco = endereco

    def get_estado_civil(self):
        return self._estado_civil

    def set_estado_civil(self, estado_civil):
        self._estado_civil = estado_civil

    def calcular_idade(self):
        data_atual = datetime.datetime.now()
        data_nascimento = datetime.datetime.strptime(self._nascimento, "%d/%m/%Y")
        idade = data_atual.year - data_nascimento.year
        if data_atual.month < data_nascimento.month or (data_atual.month == data_nascimento.month and data_atual.day < data_nascimento.day):
            idade -= 1
        return idade

    def retornar_dados_formatados(self):
        return f"Nome: {self._nome}\nNascimento: {self._nascimento}\nCPF: {self.get_cpf()}\nRG: {self.get_rg()}\nEndereÃ§o: {self._endereco}\nEstado Civil: {self._estado_civil}"


pessoa = Pessoa("Pedro Henrique", "07/11/1991", "12345678901", "987654321", "Rua 206,2", "Casado")
print(pessoa. calcular_idade())
print(pessoa.retornar_dados_formatados())
